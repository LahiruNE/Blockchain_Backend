query selectPlotByProductId{
description:"user update history"
statement:
        SELECT org.ucsc.agriblockchain.Plot
        WHERE  (plotId == _$plotId) 
}

query selectFarmByFarmId{
description:"user update history"
statement:
        SELECT org.ucsc.agriblockchain.Farm
        WHERE  (farmId == _$farmId) 
}

query getUserFromUsername{
description:"get user from username"
statement:
        SELECT org.ucsc.agriblockchain.Stakeholder
          WHERE  (username == _$username) 
}

query getUserFromUsernamePassword{
description:"get user from username"
statement:
        SELECT org.ucsc.agriblockchain.Stakeholder
          WHERE  (username == _$username AND password == _$password) 
}

query getFromCertificationBody{
  description:"get user from certificationbody"
  statement:
        SELECT org.ucsc.agriblockchain.Stakeholder
          WHERE (type == 'CERTIFICATION')
}

query getFromFarmer{
  description:"get user from certificationbody"
  statement:
        SELECT org.ucsc.agriblockchain.Stakeholder
          WHERE (type == _$type AND certification.certificationBody == _$certificationBody)
}

query getFromHistorian{
description:"get user transactions"
statement:
      SELECT org.hyperledger.composer.system.HistorianRecord
      WHERE (participantInvoking == _$Stakeholder)
 } 

 query getFromHistorianidentity{
description:"get user transactions"
statement:
      SELECT org.hyperledger.composer.system.IssueIdentity
      WHERE (transactionId == _$Id)
 } 

 query getFromHistorianadd{
description:"get user transactions"
statement:
      SELECT org.hyperledger.composer.system.AddParticipant
      WHERE (transactionId == _$Id)
 } 

 query getFromHistorianaddasset{
description:"get user transactions"
statement:
      SELECT org.hyperledger.composer.system.AddAsset
      WHERE (transactionId == _$Id)
 } 

 query getFromHistorianupdate{
description:"get user transactions"
statement:
      SELECT org.hyperledger.composer.system.UpdateParticipant
      WHERE (transactionId == _$Id)
 }  

 query getFromHistorianupdateasset{
description:"get user transactions"
statement:
      SELECT org.hyperledger.composer.system.UpdateAsset
      WHERE (transactionId == _$Id)
 } 

query getFromHistorianactivity{
description:"get user transactions"
statement:
      SELECT org.ucsc.agriblockchain.Activity
      WHERE (transactionId == _$Id)
 } 
query getFromHistorianph{
description:"get user transactions"
statement:
      SELECT org.ucsc.agriblockchain.PHReading
      WHERE (transactionId == _$Id)
 }
query getFromHistoriantransferpackage{
description:"get user transactions"
statement:
      SELECT org.ucsc.agriblockchain.TransferPackage
      WHERE (transactionId == _$Id)
 }
query getFromHistorianmergeasset{
description:"get user transactions"
statement:
      SELECT org.ucsc.agriblockchain.MergeAsset
      WHERE (transactionId == _$Id)
 }
query getFromHistoriandivideasset{
description:"get user transactions"
statement:
      SELECT org.ucsc.agriblockchain.DivideAsset
      WHERE (transactionId == _$Id)
 }

query showCommodityAllHistorians{ 
  description: "Select commodity all historians" 
  statement: 
    SELECT org.hyperledger.composer.system.HistorianRecord 
    WHERE (transactionType == 'AddAsset' OR transactionType == 'UpdateAsset' OR transactionType == 'RemoveAsset') 
} 
 
query findCommmodityHistoriansWithTime{ 
  description: "Find commodity historians after a specified time" 
  statement: 
    SELECT org.hyperledger.composer.system.HistorianRecord 
    WHERE (transactionTimestamp == _$justnow) 
}

query getHistorian{ 
  description: "Find commodity historians after a specified time" 
  statement: 
    SELECT org.hyperledger.composer.system.HistorianRecord     
}

query getSubmittedRequests{
  description:"get all submitted product transfer requests by user"
  statement:
          SELECT org.ucsc.agriblockchain.Product
            WHERE  ((transferDetails.status == "PENDING" OR transferDetails.status == "REJECTED") AND transferDetails.invokedBy == _$user) 
}

query getPendingRequests{
  description:"get all pending product transfer requests for user"
  statement:
          SELECT org.ucsc.agriblockchain.Product
            WHERE  (transferDetails.status == "PENDING" AND currentOwner == _$user) 
}

query getOwnedProducts{
  description:"get all owned products of user"
  statement:
          SELECT org.ucsc.agriblockchain.Product
            WHERE  (currentOwner == _$user AND activeStatus != "CLOSED") 
}