/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Sample access control list.
 */

rule AdminCanDoAll {
    description: "Allow all participants read access to all resources"
    participant(p): "org.ucsc.agriblockchain.Stakeholder"
    operation: ALL
    resource(r): "org.ucsc.agriblockchain.*"
    condition: (p.type == "ADMIN")
    action: ALLOW
} 

rule StakeholderCanTansfer {
    description: "Allow all participants read access to all resources"
    participant: "org.ucsc.agriblockchain.Stakeholder"
    operation: ALL
    resource: "org.ucsc.agriblockchain.TransferPackage"
    action: ALLOW
} 

rule StakeholderCanActivity {
    description: "Allow all participants read access to all resources"
    participant: "org.ucsc.agriblockchain.Stakeholder"
    operation: ALL
    resource: "org.ucsc.agriblockchain.Activity"
    action: ALLOW
} 

rule StakeholderCanDiary {
    description: "Allow all participants read access to all resources"
    participant: "org.ucsc.agriblockchain.Stakeholder"
    operation: ALL
    resource: "org.ucsc.agriblockchain.Diary"
    action: ALLOW
} 

rule StakeholderCanDivideAsset {
    description: "Allow all participants read access to all resources"
    participant: "org.ucsc.agriblockchain.Stakeholder"
    operation: ALL
    resource: "org.ucsc.agriblockchain.DivideAsset"
    action: ALLOW
} 

rule StakeholderCanInspection {
    description: "Allow all participants read access to all resources"
    participant: "org.ucsc.agriblockchain.Stakeholder"
    operation: ALL
    resource: "org.ucsc.agriblockchain.Inspection"
    action: ALLOW
} 

rule StakeholderCanMergeAsset {
    description: "Allow all participants read access to all resources"
    participant: "org.ucsc.agriblockchain.Stakeholder"
    operation: ALL
    resource: "org.ucsc.agriblockchain.MergeAsset"
    action: ALLOW
} 

rule StakeholderCanPHReading {
    description: "Allow all participants read access to all resources"
    participant: "org.ucsc.agriblockchain.Stakeholder"
    operation: ALL
    resource: "org.ucsc.agriblockchain.PHReading"
    action: ALLOW
} 

rule StakeholderCanView{
    description: "Allow all participants read access to all resources"
    participant: "org.ucsc.agriblockchain.Stakeholder"
    operation: READ
    resource: "org.ucsc.agriblockchain.Stakeholder"
    action: ALLOW
}

rule UserCanRead {
    description: "Allow all participants read access to all resources"
    participant(p): "org.ucsc.agriblockchain.Stakeholder"
    operation: READ, UPDATE
    resource(r): "org.ucsc.agriblockchain.Stakeholder"
    condition: (p.username == r.username)
    action: ALLOW
}

rule CertificationCanRead {
    description: "Allow all participants read access to all resources"
    participant(p): "org.ucsc.agriblockchain.Stakeholder"
    operation: READ, UPDATE
    resource(r): "org.ucsc.agriblockchain.*"
    condition: (p.type == "CERTIFICATION" && r.certification.certificationBody.getIdentifier() === p.getIdentifier())
    action: ALLOW
}
rule CertificationCanRead1 {
    description: "Allow all participants read access to all resources"
    participant(p): "org.ucsc.agriblockchain.Stakeholder"
    operation: READ, UPDATE
    resource(r): "org.ucsc.agriblockchain.Plot"
    condition: (p.type == "CERTIFICATION" && r.farm.certification.certificationBody.getIdentifier() === p.getIdentifier())
    action: ALLOW
}

rule RetailConditionalRule1 {
    description: "Retail can do product operations"
    participant(p): "org.ucsc.agriblockchain.Stakeholder"
    operation: CREATE
    resource: "org.ucsc.agriblockchain.Product"
    condition: (p.type == "RETAIL")
    action: DENY
}

rule InvokerHasAccessToInvokedProducts {
    description: "Allow all participants full access to their assets"
    participant(p): "org.ucsc.agriblockchain.Stakeholder"
    operation: ALL
    resource(r): "org.ucsc.agriblockchain.Product"
    condition: (r.transferDetails.invokedBy.getIdentifier() === p.getIdentifier())
    action: ALLOW
}

rule OwnerHasFullAccessToTheirProducts {
    description: "Allow all participants full access to their assets"
    participant: "org.ucsc.agriblockchain.Stakeholder"
    operation: ALL
    resource: "org.ucsc.agriblockchain.Product"
    action: ALLOW
}

rule OwnerHasFullAccessToTheirFertilizer {
    description: "Allow all participants full access to their assets"
    participant(p): "org.ucsc.agriblockchain.Stakeholder"
    operation: ALL
    resource(r): "org.ucsc.agriblockchain.Fertilizer"
    condition: (r.currentOwner.getIdentifier() === p.getIdentifier())
    action: ALLOW
}

rule OwnerHasFullAccessToTheirPesticide {
    description: "Allow all participants full access to their assets"
    participant(p): "org.ucsc.agriblockchain.Stakeholder"
    operation: ALL
    resource(r): "org.ucsc.agriblockchain.Pesticide"
    condition: (r.currentOwner.getIdentifier() === p.getIdentifier())
    action: ALLOW
}

rule OwnerHasFullAccessToTheirSeeds {
    description: "Allow all participants full access to their assets"
    participant(p): "org.ucsc.agriblockchain.Stakeholder"
    operation: ALL
    resource(r): "org.ucsc.agriblockchain.Seed"
    condition: (r.currentOwner.getIdentifier() === p.getIdentifier())
    action: ALLOW
}

rule OwnerHasFullAccessToTheirPlots {
    description: "Allow all participants full access to their assets"
    participant: "org.ucsc.agriblockchain.Stakeholder"
    operation: ALL
    resource: "org.ucsc.agriblockchain.Plot"
    action: ALLOW
}

rule FarmersHasAccessToTheirPlots {
    description: "Allow all participants full access to their assets"
    participant(p): "org.ucsc.agriblockchain.Stakeholder"
    operation: ALL
    resource(r): "org.ucsc.agriblockchain.Plot"
    condition: (p.type == "FARMER" && r.farm.farmers.some(function (farmer) {
        return farmer.getIdentifier() === p.getIdentifier();  
        } ))
    action: ALLOW
}

rule OwnerHasFullAccessToTheirFarms {
    description: "Allow all participants full access to their assets"
    participant: "org.ucsc.agriblockchain.Stakeholder"
    operation: ALL
    resource: "org.ucsc.agriblockchain.Farm"
    action: ALLOW
}

rule FarmersHasAccessToTheirFarms {
    description: "Allow all participants full access to their assets"
    participant(p): "org.ucsc.agriblockchain.Stakeholder"
    operation: ALL
    resource(r): "org.ucsc.agriblockchain.Farm"
    condition: (p.type == "FARMER" && r.farmers.some(function (farmer) {
        return farmer.getIdentifier() === p.getIdentifier();  
        } ))
    action: ALLOW
}

rule FarmerConditionalRule1 {
    description: "Farmer can do plot operations"
    participant(p): "org.ucsc.agriblockchain.Stakeholder"
    operation: CREATE
    resource: "org.ucsc.agriblockchain.Plot"
    condition: (p.type == "FARMER")
    action: ALLOW
}

rule FarmerConditionalRule2 {
    description: "Farmer can do product operations"
    participant(P): "org.ucsc.agriblockchain.Stakeholder"
    operation: CREATE
    resource: "org.ucsc.agriblockchain.Product"
    condition: (p.type == "FARMER")
    action: ALLOW
}

rule FarmerConditionalRule3 {
    description: "Farmer can do farm operations"
    participant(p): "org.ucsc.agriblockchain.Stakeholder"
    operation: CREATE
    resource: "org.ucsc.agriblockchain.Farm"
    condition: (p.type == "FARMER")
    action: ALLOW
}

rule PackagingConditionalRule1 {
    description: "Packaging can do product operations"
    participant(p): "org.ucsc.agriblockchain.Stakeholder"
    operation: CREATE
    resource: "org.ucsc.agriblockchain.Product"
    condition: (p.type == "PACKAGING")
    action: ALLOW
}

rule WarehouseConditionalRule1 {
    description: "Warehouse can do product operations"
    participant(p): "org.ucsc.agriblockchain.Stakeholder"
    operation: CREATE
    resource: "org.ucsc.agriblockchain.Product"
    condition: (p.type == "WAREHOUSE")
    action: ALLOW
}

rule SeedProviderConditionalRule1 {
    description: "Seed Provider can do product operations"
    participant(p): "org.ucsc.agriblockchain.Stakeholder"
    operation: CREATE
    resource: "org.ucsc.agriblockchain.Seed"
    condition: (p.type == "SEED")
    action: ALLOW
}

rule FertilizerProviderConditionalRule1 {
    description: "Fertilizer Provider can do product operations"
    participant(p): "org.ucsc.agriblockchain.Stakeholder"
    operation: CREATE
    resource: "org.ucsc.agriblockchain.Fertilizer"
    condition: (p.type == "FERTILIZER")
    action: ALLOW
}

rule PesticideProviderConditionalRule1 {
    description: "Pesticide Provider can do product operations"
    participant(p): "org.ucsc.agriblockchain.Stakeholder"
    operation: CREATE
    resource: "org.ucsc.agriblockchain.Pesticide"
    condition: (p.type == "PESTICIDE")
    action: ALLOW
}

rule SystemACL {
  description:  "System ACL to permit all access"
  participant: "org.hyperledger.composer.system.Participant"
  operation: ALL
  resource: "org.hyperledger.composer.system.**"
  action: ALLOW
}

rule NetworkAdminUser {
    description: "Grant business network administrators full access to user resources"
    participant: "org.hyperledger.composer.system.NetworkAdmin"
    operation: ALL
    resource: "**"
    action: ALLOW
}

rule NetworkAdminSystem {
    description: "Grant business network administrators full access to system resources"
    participant: "org.hyperledger.composer.system.NetworkAdmin"
    operation: ALL
    resource: "org.hyperledger.composer.system.**"
    action: ALLOW
}

rule historianAccess{
  description: "Only allow members to read historian records referencing transactions they submitted."
  participant:"org.hyperledger.composer.system.NetworkAdmin"
  operation: READ
  resource: "org.hyperledger.composer.system.HistorianRecord"
  action: ALLOW

}

rule historianRead{
  description: "Only allow members to read historian records referencing transactions they     	submitted."
  participant:"org.hyperledger.composer.system.Participant"
  operation: READ
  resource: "org.hyperledger.composer.system.HistorianRecord"
  action: ALLOW

}
